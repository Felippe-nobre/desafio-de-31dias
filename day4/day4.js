let nome = 'Felippe';
let sobrenome = "Nobre";
let saudacao = `Ol√°, ${nome} ${sobrenome}`;
console.log(saudacao);

let palavra = 'Programa√ß√£o';
console.log(palavra[1]);
console.log(palavra.length);

let frase = "Eu amo programa√ß√£o";
console.log(frase)
let Palavra = frase.slice(6, 18);
console.log(Palavra);

let novaSaudacao = saudacao.replace("Ol√°", "Boa tarde");
console.log(novaSaudacao);

let email = 'felippenobresouza@gmail.com'
if (email.includes('.com')) {
    console.log('email valido');
}else{
    console.log('email invalido');
}
/*### **Introdu√ß√£o**

Bem-vindo ao **quarto dia do desafio!** üéâ Hoje vamos mergulhar nas **strings**, um dos tipos de dados mais usados na programa√ß√£o.

As strings representam **sequ√™ncias de caracteres** (letras, n√∫meros, s√≠mbolos, etc.) e est√£o presentes em quase todo programa, desde mensagens de erro at√© nomes de usu√°rios e textos de interface.

Voc√™ aprender√° como manipular strings, concaten√°-las, extrair partes, e aplicar m√©todos √∫teis do JavaScript. Vamos l√°? üöÄ

---

### **üìö O Que √© uma String?**

Uma string √© basicamente **um texto entre aspas**. No JavaScript, voc√™ pode usar tr√™s tipos de aspas:

- **Aspas simples** `'Texto'`
- **Aspas duplas** `"Texto"`
- **Template literals (crase)** ``Texto``

üí° **Exemplo:**

```jsx
let nome = "Jo√£o";  // Aspas duplas
let sobrenome = 'Silva';  // Aspas simples
let saudacao = `Ol√°, ${nome}!`;  // Template literal
```

üìå **Dica:** Use `template literals` (crase) quando precisar incluir vari√°veis ou express√µes diretamente no texto.

---

### **üîç Principais Opera√ß√µes com Strings**

- **Concatenar Strings:**
Unir textos usando o operador `+` ou template literals:

```jsx
let nome = "Ana";
let saudacao = "Ol√°, " + nome + "!";  // Usando +
let saudacao2 = `Ol√°, ${nome}!`;  // Usando template literals
console.log(saudacao);  // Sa√≠da: Ol√°, Ana!
```

- **Acessar Caracteres:**
Cada caractere de uma string tem um √≠ndice, come√ßando em `0`:

```jsx
let palavra = "Programa√ß√£o";
console.log(palavra[0]);  // Sa√≠da: P
console.log(palavra[4]);  // Sa√≠da: a
```

- **Obter o Tamanho da String:**

```jsx
let texto = "JavaScript";
console.log(texto.length);  // Sa√≠da: 10
```

---

### **üîÑ M√©todos √öteis para Manipular Strings**

| M√©todo | Descri√ß√£o | Exemplo | Sa√≠da |
| --- | --- | --- | --- |
| `toUpperCase()` | Transforma tudo em mai√∫sculas | `"abc".toUpperCase()` | `"ABC"` |
| `toLowerCase()` | Transforma tudo em min√∫sculas | `"ABC".toLowerCase()` | `"abc"` |
| `trim()` | Remove espa√ßos do in√≠cio e do fim | `"  texto  ".trim()` | `"texto"` |
| `includes()` | Verifica se cont√©m um texto espec√≠fico | `"JavaScript".includes("Script")` | `true` |
| `startsWith()` | Verifica se come√ßa com um texto | `"JavaScript".startsWith("Java")` | `true` |
| `endsWith()` | Verifica se termina com um texto | `"JavaScript".endsWith("Script")` | `true` |
| `slice()` | Extrai uma parte da string | `"JavaScript".slice(0, 4)` | `"Java"` |
| `replace()` | Substitui parte do texto | `"Ol√°, Jo√£o".replace("Jo√£o", "Ana")` | `"Ol√°, Ana"` |

---

### **üíª Exemplos Pr√°ticos**

- **Formatando Texto:**

```jsx
let nome = "   ana silva   ";
console.log(nome.trim().toUpperCase());  // Sa√≠da: ANA SILVA
```

- **Validando Strings:**

```jsx
let email = "usuario@gmail.com";
if (email.includes("@")) {
  console.log("Email v√°lido!");
} else {
  console.log("Email inv√°lido!");
}
```

- **Cortando Partes de um Texto:**

```jsx
let frase = "Eu amo programa√ß√£o!";
let palavra = frase.slice(6, 16);
console.log(palavra);  // Sa√≠da: programa√ß√£o
```

- **Substituindo Palavras:**

```jsx
let mensagem = "Ol√°, Jo√£o!";
let novaMensagem = mensagem.replace("Jo√£o", "Maria");
console.log(novaMensagem);  // Sa√≠da: Ol√°, Maria!
```

- **Verificando Come√ßo e Fim:**

```jsx
let site = "www.exemplo.com";
console.log(site.startsWith("www"));  // Sa√≠da: true
console.log(site.endsWith(".com"));  // Sa√≠da: true
```

---

### **üõ†Ô∏è Dicas Importantes**

- **Strings s√£o imut√°veis:**
    
    Voc√™ n√£o pode alterar diretamente um caractere de uma string.
    
    ```jsx
    let texto = "Ol√°";
    texto[0] = "A";  // N√£o funciona
    console.log(texto);  // Sa√≠da: Ol√°
    ```
    
- **Use m√©todos encadeados para manipula√ß√£o eficiente:**
    
    ```jsx
    let texto = "  Ol√°, mundo!  ";
    console.log(texto.trim().toUpperCase());  // Sa√≠da: OL√Å, MUNDO!
    ```*/