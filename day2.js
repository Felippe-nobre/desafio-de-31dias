let hora = 10;
if (hora < 12){
    console.log("Bom dia");
}else if (hora < 18) {
    console.log("Boa tarde");
} else {
    console.log("Boa noite");
}

let diaDaSemana = 2;
switch (diaDaSemana) {
    case 1 :
        console.log("segunda-feira");
        break;

    case 2 :
        console.log("ter√ßa-feira");
        break; 

    case 3 :
        console.log("quarta-feira");
        break;

    case 4 :
        console.log("quinta-feira");
        break;

    case 5 :
        console.log("sexta-feira");
        break;

    case 6 :
        console.log("sabado");
        break;

    case 7 :
        console.log("domingo");
        break;

    default:
        console.log("dia inv√°lido");
        break;
}
/* 
### **Introdu√ß√£o**

Seja bem-vindo ao **segundo dia do desafio!** üéâ Hoje vamos explorar as **Estruturas Condicionais**, que s√£o a forma de fazer o c√≥digo tomar decis√µes com base em condi√ß√µes.

Pense assim: na vida, estamos sempre avaliando condi√ß√µes para agir. Por exemplo:

- **Se** est√° chovendo, **ent√£o** levo um guarda-chuva.
- **Caso contr√°rio**, saio sem ele.

Na programa√ß√£o, √© exatamente assim! Vamos aprender a usar o famoso `if`, o √∫til `else`, e o vers√°til `switch`. Vamos l√°? üöÄ

---

### **üìö O Que s√£o Estruturas Condicionais?**

As estruturas condicionais permitem que o c√≥digo **execute diferentes blocos de instru√ß√µes** dependendo de condi√ß√µes espec√≠ficas.

No JavaScript, as principais formas de tomar decis√µes s√£o:

1. **`if` e `else`:** Executa um bloco de c√≥digo se uma condi√ß√£o for verdadeira, e outro bloco caso contr√°rio.
2. **`else if`:** Permite testar v√°rias condi√ß√µes.
3. **`switch`:** Ideal para quando voc√™ precisa verificar muitas possibilidades de forma mais limpa.

---

### **üîç `if`, `else if`, e `else`**

Vamos come√ßar com a estrutura mais b√°sica:

```jsx
let hora = 10;

if (hora < 12) {
  console.log("Bom dia! ‚òÄÔ∏è");
} else if (hora < 18) {
  console.log("Boa tarde! üå§Ô∏è");
} else {
  console.log("Boa noite! üåô");
}
```

üìå **Explica√ß√£o:**

1. Se `hora` for menor que 12, imprime "Bom dia!".
2. Caso contr√°rio, se `hora` for menor que 18, imprime "Boa tarde!".
3. Se nenhuma das condi√ß√µes acima for verdadeira, imprime "Boa noite!".

---

### **üîÑ `switch`**

O `switch` √© √∫til quando voc√™ precisa testar **v√°rios casos diferentes** para uma mesma vari√°vel.

```jsx
let diaSemana = 2;

switch (diaSemana) {
  case 1:
    console.log("Segunda-feira");
    break;
  case 2:
    console.log("Ter√ßa-feira");
    break;
  case 3:
    console.log("Quarta-feira");
    break;
  default:
    console.log("Outro dia");
}
```

üìå **Explica√ß√£o:**

- Cada `case` √© uma condi√ß√£o que verifica o valor da vari√°vel `diaSemana`.
- O `default` √© executado se nenhum dos casos for verdadeiro.
- O `break` impede que o c√≥digo continue executando outros casos.

---

### **‚ö° Operador Tern√°rio**

Se voc√™ precisa fazer uma decis√£o simples, o operador tern√°rio √© perfeito. Ele √© como um `if` resumido:

```jsx
let idade = 18;
let mensagem = idade >= 18 ? "Pode entrar! üéâ" : "Entrada proibida! ‚ùå";

console.log(mensagem);
```

üìå **Explica√ß√£o:**

- Se a condi√ß√£o `idade >= 18` for verdadeira, retorna "Pode entrar!".
- Caso contr√°rio, retorna "Entrada proibida!".

---

### **üíª Exemplos Pr√°ticos**

- **Verificando Par ou √çmpar:**

```jsx
let numero = 7;

if (numero % 2 === 0) {
  console.log(`${numero} √© par.`);
} else {
  console.log(`${numero} √© √≠mpar.`);
}

```

- **Classificando Notas:**

```jsx
let nota = 85;

if (nota >= 90) {
  console.log("Aprovado com A! üèÜ");
} else if (nota >= 70) {
  console.log("Aprovado com B.");
} else {
  console.log("Reprovado. üòî");
}

```

- **Escolhendo uma A√ß√£o com `switch`:**

```jsx
let opcao = "pagar";

switch (opcao) {
  case "pagar":
    console.log("Processando pagamento...");
    break;
  case "cancelar":
    console.log("Cancelando pedido...");
    break;
  default:
    console.log("Op√ß√£o inv√°lida!");
}
```

---

### **üõ†Ô∏è Dicas Importantes**

- **Coloque condi√ß√µes mais espec√≠ficas primeiro:**
    
    ```jsx
    if (nota >= 90) {
      // Espec√≠fico
    } else if (nota >= 50) {
      // Geral
    }
    ```
    
- **Use `switch` para evitar muitos `else if`:**
    
    Quando h√° muitas op√ß√µes baseadas em um √∫nico valor, o `switch` torna o c√≥digo mais leg√≠vel.
    
- **Evite duplicar c√≥digo:**
    
    Tente organizar as condi√ß√µes de forma a evitar repeti√ß√µes desnecess√°rias.
*/